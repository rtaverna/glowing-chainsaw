{"ast":null,"code":"var _jsxFileName = \"/Users/RachelTaverna/mishafoto/src/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  const onSubmit = async data => {\n    try {\n      const templateParams = {\n        name: data.name,\n        email: data.email,\n        subject: data.subject,\n        message: data.message\n      };\n      await emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, templateParams, \"user_ZsRSsM70BbZmBJJ8S4jlb\");\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contactForm\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"contact-form\",\n              onSubmit: handleSubmit(onSubmit),\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    ref: register({\n                      required: {\n                        value: true,\n                        message: 'Please enter your name'\n                      },\n                      maxLength: {\n                        value: 30,\n                        message: 'Please use 30 characters or less'\n                      }\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    name: \"email\",\n                    ref: register({\n                      required: true,\n                      pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: \"Please enter a valid email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"subject\",\n                    ref: register({\n                      required: {\n                        value: true,\n                        message: 'Please enter a subject'\n                      },\n                      maxLength: {\n                        value: 75,\n                        message: 'Subject cannot exceed 75 characters'\n                      }\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: errors.subject.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: 3,\n                    name: \"message\",\n                    ref: register({\n                      required: true\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: \"Please enter a message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-btn\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ContactForm, \"oKAnpUyZAKrHAyK19qEcyWWx3sE=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/RachelTaverna/mishafoto/src/ContactForm.js"],"names":["useForm","emailjs","ToastContainer","toast","ContactForm","register","errors","handleSubmit","reset","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","templateParams","name","email","subject","message","send","process","env","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","e","console","log","required","value","maxLength","pattern"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n\nconst ContactForm = () => {\n    const { register, errors, handleSubmit, reset } = useForm();\n  \n    const toastifySuccess = () => {\n        toast('Form sent!', {\n          position: 'bottom-right',\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,  \n          draggable: false,\n          className: 'submit-feedback success',\n          toastId: 'notifyToast'\n        });\n      };\n\n    const onSubmit = async (data) => {\n        try {\n          const templateParams = {\n            name: data.name,\n            email: data.email,\n            subject: data.subject,\n            message: data.message\n          };\n          await emailjs.send(\n            process.env.REACT_APP_SERVICE_ID,\n            process.env.REACT_APP_TEMPLATE_ID,\n            templateParams,\n            \"user_ZsRSsM70BbZmBJJ8S4jlb\"\n          );\n          reset();\n          toastifySuccess();\n        } catch (e) {\n          console.log(e);\n        }\n      };\n  \n    return (\n      <div className='ContactForm'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-12 text-center'>\n              <div className='contactForm'>\n                <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                  {/* Row 1 of form */}\n                  <div className='row formRow'>\n                    <div className='col-6'>\n                      <input\n                        type='text'\n                        name='name'\n                        ref={register({\n                          required: { value: true, message: 'Please enter your name' },\n                          maxLength: {\n                            value: 30,\n                            message: 'Please use 30 characters or less'\n                          }\n                        })}\n                        className='form-control formInput'\n                        placeholder='Name'\n                      ></input>\n                      {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\n                    </div>\n                    <div className='col-6'>\n                      <input\n                        type='email'\n                        name='email'\n                        ref={register({\n                          required: true,\n                          pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                        })}\n                        className='form-control formInput'\n                        placeholder='Email address'\n                      ></input>\n                      {errors.email && (\n                        <span className='errorMessage'>Please enter a valid email address</span>\n                      )}\n                    </div>\n                  </div>\n                  {/* Row 2 of form */}\n                  <div className='row formRow'>\n                    <div className='col'>\n                      <input\n                        type='text'\n                        name='subject'\n                        ref={register({\n                          required: { value: true, message: 'Please enter a subject' },\n                          maxLength: {\n                            value: 75,\n                            message: 'Subject cannot exceed 75 characters'\n                          }\n                        })}\n                        className='form-control formInput'\n                        placeholder='Subject'\n                      ></input>\n                      {errors.subject && (\n                        <span className='errorMessage'>{errors.subject.message}</span>\n                      )}\n                    </div>\n                  </div>\n                  {/* Row 3 of form */}\n                  <div className='row formRow'>\n                    <div className='col'>\n                      <textarea\n                        rows={3}\n                        name='message'\n                        ref={register({\n                          required: true\n                        })}\n                        className='form-control formInput'\n                        placeholder='Message'\n                      ></textarea>\n                      {errors.message && <span className='errorMessage'>Please enter a message</span>}\n                    </div>\n                  </div>\n                  <button className='submit-btn' type='submit'>\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <ToastContainer/>\n      </div>\n    );\n  };\n  \n  export default ContactForm;"]},"metadata":{},"sourceType":"module"}